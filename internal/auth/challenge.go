// SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company
// SPDX-License-Identifier: Apache-2.0

package auth

import (
	"fmt"

	"github.com/sapcc/keppel/internal/keppel"
)

// Challenge contains information that we need to render a Www-Authenticate header for a 401 error.
//
// Usually, these 401 errors are generated by IncomingRequest.Authorize(), but that method also returns
// this struct for weird corner cases where API implementations need to generate 401 errors themselves.
type Challenge struct {
	AuthEndpointURL  string
	AudienceHostname string
	Scopes           ScopeSet
	ErrorMessage     string
}

// WithErrorMessage returns a copy of c, with the ErrorMessage field filled.
func (c Challenge) WithErrorMessage(msg string) Challenge {
	c.ErrorMessage = msg
	return c
}

// AddTo adds a Www-Authenticate header to the given error.
func (c Challenge) AddTo(err *keppel.RegistryV2Error) *keppel.RegistryV2Error {
	fields := fmt.Sprintf(`realm="%s",service="%s"`, c.AuthEndpointURL, c.AudienceHostname)
	for _, scope := range c.Scopes {
		if !scope.Contains(InfoAPIScope) {
			fields += fmt.Sprintf(`,scope="%s"`, scope)
		}
	}
	if c.ErrorMessage != "" {
		fields += fmt.Sprintf(`,error="%s"`, c.ErrorMessage)
	}
	return err.WithHeader("Www-Authenticate", "Bearer "+fields)
}

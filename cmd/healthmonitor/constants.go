// SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company
// SPDX-License-Identifier: Apache-2.0

package healthmonitorcmd

import "encoding/base64"

// This file contains a minimal complete Docker image (one blob with the image
// configuration and one manifest) as generated by the Dockerfile:
//
//    FROM scratch
//    ADD hello.txt /
//
// where hello.txt contains the string "hello\n".
//
//NOTE: This is technically not minimal. We could have an image without any
// layers whatsoever. However, we explicitly include a small layer because layer
// downloads and config downloads exercise different code paths in the API.

const minimalImageConfiguration = `{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"],"Cmd":null,"Image":"","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"container_config":{"Hostname":"","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"],"Cmd":["/bin/sh","-c","#(nop) ADD file:7d1b8e6c9123955c22ae5efea6309bc3436ed116b03932f650caae30c06ab651 in / "],"Image":"","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"created":"2021-02-23T10:00:06.332861325Z","docker_version":"20.10.1","history":[{"created":"2021-02-23T10:00:06.332861325Z","created_by":"/bin/sh -c #(nop) ADD file:7d1b8e6c9123955c22ae5efea6309bc3436ed116b03932f650caae30c06ab651 in / "}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:967a3b82a0bf0e6079cb995d96faed65135d465a349e73390e6de3112273d5ca"]}}`

const minimalImageLayerBase64 = `H4sIAAAAAAAA/8pIzcnJ1yupKGGgHTAwNDAwMzFhMIAAdNrAwMCMwdDEwNDU0NTAzNyQwcDQ0NDAlEHBgIZugoPS4pLEIgYDiu1C99wQAeD45xpoV4yCUTAKRsEooDcABAAA//+LzfQdAAgAAA==`

const minimalManifest = `{
   "schemaVersion": 2,
   "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
   "config": {
      "mediaType": "application/vnd.docker.container.image.v1+json",
      "size": 1176,
      "digest": "sha256:54f06ec27d30c6b8cefd4610494cfc64daf1fff1ad905c6e81bcbbf61590d089"
   },
   "layers": [
      {
         "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
         "size": 109,
         "digest": "sha256:de1777b35ae1bb00f139fb97e2f3f37c49344f86a83c22acfc210f30a39511d4"
      }
   ]
}`

func minimalImageLayer() []byte {
	buf, err := base64.StdEncoding.DecodeString(minimalImageLayerBase64)
	if err != nil {
		panic(err.Error())
	}
	return buf
}
